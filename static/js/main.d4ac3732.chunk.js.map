{"version":3,"sources":["resume.pdf","components/header.js","components/about.js","components/resume.js","components/contact.js","components/footer.js","components/portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","this","props","data","name","occupation","description","city","address","networks","social","map","network","key","href","url","className","id","title","Component","About","image","bio","street","state","zip","phone","email","src","alt","Resume","target","rel","education","e","school","degree","graduated","work","job","company","years","skills","skill","toLowerCase","style","width","level","Contact","subject","message","status","handleChange","bind","handleSubmit","event","value","setState","ev","preventDefault","form","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","reset","send","onSubmit","htmlFor","type","size","placeholder","onChange","cols","rows","Footer","Portfolio","portfolio","projects","project","imageUrl","category","App","resumeData","main","resume","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d4ac3732.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.999eeb66.pdf\";","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    if (this.props.data) {\r\n      var name = this.props.data.name;\r\n      var occupation = this.props.data.occupation;\r\n      var description = this.props.data.description;\r\n      var city = this.props.data.address.city;\r\n      var networks = this.props.data.social.map(function (network) {\r\n        return (\r\n          <li key={network.name}>\r\n            <a href={network.url}>\r\n              <i className={network.className}></i>\r\n            </a>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <header id=\"home\">\r\n        <nav id=\"nav-wrap\">\r\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\r\n            Show navigation\r\n          </a>\r\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\r\n            Hide navigation\r\n          </a>\r\n          <ul id=\"nav\" className=\"nav\">\r\n            <li className=\"current\">\r\n              <a className=\"smoothscroll\" href=\"#home\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"smoothscroll\" href=\"#about\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"smoothscroll\" href=\"#resume\">\r\n                Resume\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"smoothscroll\" href=\"#contact\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <div className=\"row banner\">\r\n          <div className=\"banner-text\">\r\n            <h1 className=\"responsive-headline\">{name}</h1>\r\n            <h3>\r\n              I'm a <span>{occupation}</span> from {city}. {description}\r\n            </h3>\r\n            <hr />\r\n            <ul className=\"social\">{networks}</ul>\r\n          </div>\r\n        </div>\r\n        <p className=\"scrolldown\">\r\n          <a className=\"smoothscroll\" href=\"#about\">\r\n            <i className=\"icon-down-circle\"></i>\r\n          </a>\r\n        </p>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Resume from \"../resume.pdf\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    if (this.props.data) {\r\n      var name = this.props.data.name;\r\n      var image = \"images/\" + this.props.data.image;\r\n      var bio = this.props.data.bio;\r\n      var street = this.props.data.address.street;\r\n      var city = this.props.data.address.city;\r\n      var state = this.props.data.address.state;\r\n      var zip = this.props.data.address.zip;\r\n      var phone = this.props.data.phone;\r\n      var email = this.props.data.email;\r\n    }\r\n    return (\r\n      <section id=\"about\">\r\n        <div className=\"row\">\r\n          <div className=\"three columns\">\r\n            <img className=\"profile-pic\" src={image} alt=\"\" />\r\n          </div>\r\n          <div className=\"nine columns main-col\">\r\n            <h2>About Me</h2>\r\n            <p>{bio}</p>\r\n            <div className=\"row\">\r\n              <div className=\"columns contact-details\">\r\n                <h2>Contact Details</h2>\r\n                <p className=\"address\">\r\n                  <span>{name}</span>\r\n                  <br />\r\n                  <span>\r\n                    {street}\r\n                    <br />\r\n                    {city}, {state} {zip}\r\n                  </span>\r\n                  <br />\r\n                  <span>{phone}</span>\r\n                  <br />\r\n                  <span>{email}</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"columns download\">\r\n                <p>\r\n                  <a\r\n                    href={Resume}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"button\"\r\n                  >\r\n                    <i className=\"fa fa-download\"></i>Download Resume\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Resume extends Component {\r\n  render() {\r\n    if (this.props.data) {\r\n      var education = this.props.data.education.map((e) => {\r\n        return (\r\n          <div key={e.school} className=\"row item\">\r\n            <div className=\"twelve columns\">\r\n              <h3>{e.school}</h3>\r\n              <p className=\"info\">\r\n                {e.degree} <span>&bull;</span>{\" \"}\r\n                <em className=\"date\">{e.graduated}</em>\r\n              </p>\r\n              <p>{e.description}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n\r\n      var work = this.props.data.work.map((job) => {\r\n        return (\r\n          <div key={job.company} className=\"row item\">\r\n            <div className=\"twelve columns\">\r\n              <h3>{job.company}</h3>\r\n              <p className=\"info\">\r\n                {job.title}\r\n                <span>&bull;</span> <em className=\"date\">{job.years}</em>\r\n              </p>\r\n\r\n              <p>{job.description}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n\r\n      var skills = this.props.data.skills.map((skill) => {\r\n        var className = \"bar-expand \" + skill.name.toLowerCase();\r\n        return (\r\n          <li key={skill.name}>\r\n            <span style={{ width: skill.level }} className={className}></span>\r\n            <em>{skill.name}</em>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <section id=\"resume\">\r\n        <div className=\"row education\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Education</span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">{education}</div>\r\n        </div>\r\n\r\n        <div className=\"row work\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Work</span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">{work}</div>\r\n        </div>\r\n\r\n        <div className=\"row skill\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Skills</span>\r\n            </h1>\r\n          </div>\r\n          <div className=\"nine columns main-col\">\r\n            <p>\r\n              The main skill sets below outline the variety of skills performed\r\n              during my journey as a {this.props.title}.\r\n            </p>\r\n            <div className=\"bars\">\r\n              <ul className=\"skills\">{skills}</ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Contact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      subject: \"\",\r\n      message: \"\",\r\n      status: \"\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = event.target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(ev) {\r\n    ev.preventDefault();\r\n    const form = ev.target;\r\n    const data = new FormData(form);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(form.method, form.action);\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n      if (xhr.status === 200) {\r\n        form.reset();\r\n        this.setState({ status: \"SUCCESS\" });\r\n      } else {\r\n        this.setState({ status: \"ERROR\" });\r\n      }\r\n    };\r\n    xhr.send(data);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.data) {\r\n      let name = this.props.data.name;\r\n      let street = this.props.data.address.street;\r\n      let city = this.props.data.address.city;\r\n      let state = this.props.data.address.state;\r\n      let zip = this.props.data.address.zip;\r\n      let phone = this.props.data.phone;\r\n      const { status } = this.state;\r\n      return (\r\n        <section id=\"contact\">\r\n          <div className=\"row section-head\">\r\n            <div className=\"two columns header-col\">\r\n              <h1>\r\n                <span>Get In Touch.</span>\r\n              </h1>\r\n            </div>\r\n\r\n            <div className=\"ten columns\">\r\n              <p className=\"lead\">Please feel free to contact me.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"eight columns\">\r\n              <form\r\n                onSubmit={this.handleSubmit}\r\n                id=\"contactForm\"\r\n                name=\"contactForm\"\r\n                action=\"Your FormSpree link\"\r\n                method=\"POST\"\r\n              >\r\n                <fieldset>\r\n                  <div>\r\n                    <label htmlFor=\"contactName\">\r\n                      Name <span className=\"required\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      size=\"35\"\r\n                      id=\"contactName\"\r\n                      placeholder=\"Name Required\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"contactEmail\">\r\n                      Email <span className=\"required\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      size=\"35\"\r\n                      id=\"contactEmail\"\r\n                      placeholder=\"Email Required\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"contactSubject\">Subject</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      size=\"35\"\r\n                      placeholder=\"Subject Title\"\r\n                      id=\"contactSubject\"\r\n                      name=\"subject\"\r\n                      value={this.state.subject}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label htmlFor=\"contactMessage\">\r\n                      Message <span className=\"required\">*</span>\r\n                    </label>\r\n                    <textarea\r\n                      cols=\"50\"\r\n                      rows=\"15\"\r\n                      id=\"contactMessage\"\r\n                      placeholder=\"Main Message\"\r\n                      name=\"message\"\r\n                      value={this.state.message}\r\n                      onChange={this.handleChange}\r\n                    ></textarea>\r\n                  </div>\r\n\r\n                  <div>\r\n                    {status === \"SUCCESS\" ? (\r\n                      <p>Thanks!</p>\r\n                    ) : (\r\n                      <button type=\"submit\" className=\"submit\">\r\n                        Submit\r\n                      </button>\r\n                    )}\r\n                    {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\r\n\r\n                    <span id=\"image-loader\">\r\n                      <img alt=\"\" src=\"images/loader.gif\" />\r\n                    </span>\r\n                  </div>\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n\r\n            <aside className=\"four columns footer-widgets\">\r\n              <div className=\"widget widget_contact\">\r\n                <h4>Address and Phone</h4>\r\n                <p className=\"address\">\r\n                  {name}\r\n                  <br />\r\n                  {street} <br />\r\n                  {city}, {state} {zip}\r\n                  <br />\r\n                  <span>{phone}</span>\r\n                </p>\r\n              </div>\r\n            </aside>\r\n          </div>\r\n        </section>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <div className=\"row\">\r\n          <div className=\"twelve columns\">\r\n            <ul className=\"copyright\">\r\n              <li>&copy; Copyright 2020 Shan Shaji </li>\r\n            </ul>\r\n          </div>\r\n          <div id=\"go-top\">\r\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\r\n              <i className=\"icon-up-open\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Portfolio extends Component {\r\n  render() {\r\n    if(this.props.data){\r\n      var portfolio = this.props.data.projects.map(function(project){        \r\n        var imageUrl = 'images/portfolio/'+ project.image;\r\n        return <div key={project.title} className=\"columns portfolio-item\">\r\n           <div className=\"item-wrap\">\r\n              <a href={project.url} title=\"\">\r\n                 <img alt=\"\" src={imageUrl} />\r\n                 <div className=\"overlay\">\r\n                    <div className=\"portfolio-item-meta\">\r\n                   <h5>{project.title}</h5>\r\n                       <p>{project.category}</p>\r\n                </div>\r\n                 </div>\r\n                 \r\n              </a>\r\n\r\n           </div>\r\n       </div>\r\n      });\r\n    }\r\n    return (\r\n      <section id=\"portfolio\">\r\n      <div className=\"row\">\r\n         <div className=\"twelve columns collapsed\">\r\n            <h1>Check Out Some of My Works.</h1>\r\n            <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\r\n          \t   {portfolio}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/header';\r\nimport About from './components/about';\r\nimport Resume from './components/resume';\r\nimport Contact from './components/contact';\r\nimport Footer from './components/footer';\r\nimport Portfolio from './components/portfolio';\r\nimport {main,resume, portfolio} from './resumeData.json';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      \r\n      resumeData:{\r\n        main: main,\r\n        resume: resume,\r\n        portfolio: portfolio\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    console.log(main);\r\n    return (\r\n      <div className=\"App\">\r\n        <Header data={main} />\r\n        <About data={this.state.resumeData.main} />\r\n        <Resume data={this.state.resumeData.resume} title={this.state.resumeData.main.occupation} />\r\n        <Portfolio data={this.state.resumeData.portfolio} />\r\n        <Contact data={this.state.resumeData.main} />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}